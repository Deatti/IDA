import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import javax.imageio.ImageIO;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.firefox.FirefoxDriver;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

import jdk.nashorn.internal.parser.JSONParser;
import ru.yandex.qatools.ashot.AShot;
import ru.yandex.qatools.ashot.Screenshot;
import ru.yandex.qatools.ashot.shooting.ShootingStrategies;
import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisPubSub;

public class WebCapture {
	public static void main(String args[]) throws Exception{
		
		
		Thread1 t1= new Thread1();
		t1.start();
		
	}
}
	class Thread1 extends Thread{
		public void run() {
			Jedis watch = new Jedis("210.114.89.51",6379);
			final Jedis output = new Jedis("210.114.89.51",6379);
			
			String list = new String();
			
			final JedisPubSub jedisPubSub = new JedisPubSub() {
				
				public void onMessage(String channal, String message){
					//System.out.println("C");
					String a = new String(output.rpop("CaptureList"));
					JsonParser parser = new JsonParser();
					JsonObject object = (JsonObject)parser.parse(a);
					JsonArray list = (JsonArray)object.get("Capture");
					//System.out.println("url"+object.get("url"));
					String url = object.get("url").toString();
					String fb_id = object.get("fb_id").toString();
					String ticket = object.get("ticket_id").toString();
					
					url = url.substring(1,url.length()-1);
					fb_id = fb_id.substring(1,fb_id.length()-1);
					ticket = ticket.substring(1,ticket.length()-1);
					
					String path = ("/Volumes/lake/capture/img/"+ticket+".jpg");
					
					System.out.println(url+" "+fb_id+" "+ticket);
					
					System.setProperty("webdriver.gecko.driver", "/Users/nightzen/Downloads/web/jar/geckodriver");
					WebDriver driver = new FirefoxDriver();
				
					driver.get(url);
					Screenshot fpScreenshot = new AShot().shootingStrategy(ShootingStrategies.viewportPasting(1000)).takeScreenshot(driver);
					try{
						ImageIO.write(fpScreenshot.getImage(),"JPG", new File("/Volumes/lake/capture/img/"+ticket+".jpg"));
					}catch(IOException e) {
						e.printStackTrace();
					}
			
					
					try {
						MessageDigest md = MessageDigest.getInstance("SHA-256");
						FileInputStream fis = new FileInputStream(path);
						byte[] dataBytes = new byte[2014];
						int nread = 0;
						while((nread = fis.read(dataBytes))!=-1) {
							md.update(dataBytes,0,nread);
						};
						byte[] mdbytes = md.digest();
						
						StringBuffer sb = new StringBuffer();
						for(int i = 0; i<mdbytes.length;i++) {
							sb.append(Integer.toString((mdbytes[i] &0xff)+0x100,16).substring(1));
						}
						String Sha = sb.toString();
						System.out.println(Sha);
					} catch (NoSuchAlgorithmException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (FileNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					
				}
					
					
						
					
					
					
				
			};
			//JedisPubSub jedisPubSub = setupSubscriber();
			//JedisListManage jedisPubSub = new JedisListManage();
			String channal[] = {"CaptureList"};
			watch.subscribe(jedisPubSub, channal);
			/*System.setProperty("webdriver.gecko.driver", "/Users/nightzen/Downloads/web/jar/geckodriver");
			WebDriver driver = new FirefoxDriver();
		
			driver.get(url);
			Screenshot fpScreenshot = new AShot().shootingStrategy(ShootingStrategies.viewportPasting(1000)).takeScreenshot(driver);
			try{
				ImageIO.write(fpScreenshot.getImage(),"JPG", new File("/Volumes/lake/capture/img/"+System.currentTimeMillis()+"FullPageScreenshot.jpg"));
			}catch(IOException e) {
				e.printStackTrace();
			}*/
			
		}
	}
	
	/*class JedisListManage {	
		private void setupSubscriber() {
			final Jedis output = new Jedis("210.114.89.51",6379);
			
			final JedisPubSub jedisPubSub = new JedisPubSub() {
				public void onMessage(String channal, String message) {
					System.out.println("C");
					output.rpop("CaptureList");
				}
			};
			//return jedisPubSub;
		}
	}*/


